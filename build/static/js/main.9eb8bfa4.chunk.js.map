{"version":3,"sources":["reportWebVitals.js","ButtonAppBar.js","atoms/character_atom.js","hooks/useCharacter.js","NavDrawer.js","CharacterPage/SkillTransfer.js","Functions/character_choices.js","CharacterPage/GenChar.js","Components/CharacterChoices.js","Functions/spell_table.js","CharacterPage/NewChar.js","CharacterPage/HomePage.js","CharacterPage/BlankCharacter.js","CharacterPage/SavedCharacters.js","CharacterPage/SignIn.js","CharacterPage/SpellTransfer.js","dragon4.png","RedDragon.png","App.js","ThemeWrapper.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ButtonAppBar","props","test_button","a","fetch","process","response","json","json_response","console","log","Box","sx","flexGrow","AppBar","position","color","Toolbar","IconButton","size","edge","mr","onClick","open_drawer","Button","variant","Typography","component","characterAtom","atom","key","default","useCharacter","useRecoilState","character","set_character","NavDrawer","useState","navList","set_navList","useEffect","name","text","path","icon","Drawer","anchor","open","onClose","role","width","minWidth","List","map","item","index","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","Divider","not","b","filter","value","indexOf","intersection","SkillTransfer","React","checked","setChecked","left","setLeft","right","setRight","leftChecked","rightChecked","handleToggle","currentIndex","newChecked","push","splice","numberOfChecked","items","length","handleToggleAll","customList","title","Card","marginTop","backgroundColor","CardHeader","px","py","avatar","Checkbox","indeterminate","disabled","inputProps","subheader","Paper","elevation","height","overflow","dense","labelId","tabIndex","disableRipple","id","Grid","container","spacing","justifyContent","alignItems","direction","my","concat","roll_dice","number_of_rolls","total","i","Math","floor","random","hit_dice","hit_dice4","hit_dice12","get_character_choices","count","choices","level","expPoints","new_character","race","_class","alignment","strength","liftBend","carryWeight","dexterity","constitution","intelligence","wisdom","charisma","charHeight","charWeight","hairColor","eyeColor","hitPoints","mainWeapon","randSpell","randSkill","startEquip","startEquip2","dodge","hitDice","investigation","skillBonus","perception","insight","charm","intimidate","armorClass","thaco","speed","saveThrow","initiative","gender","age","bonus_choices","j","strBonus","get_str_bonus","dexBonus","get_dex_bonus","conBonus","get_con_bonus","conBonusTotal","intBonus","get_int_bonus","wisBonus","get_wis_bonus","chaBonus","get_cha_bonus","GenChar","combined_character","table","labels","maxWidth","boxSizing","padding","xs","fontWeight","mySuperHeroName","require","CharacterChoices","character_data","set_character_data","character_name","set_character_name","selected_character","set_selected_character","navigate","useLocation","useNavigate","Container","paddingTop","TextField","onChange","event","target","helperText","Boolean","label","className","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","createData","calories","fat","carbs","protein","InputAdornments","investBonus","profBonus","perceptBonus","insightBonus","fullWidth","border","InputProps","startAdornment","InputAdornment","margin","paddingBottom","textAlign","marginBottom","paddingLeftt","Save","SignUp","zindex","href","Date","getFullYear","theme","createTheme","SignIn","ThemeProvider","CssBaseline","display","flexDirection","onSubmit","preventDefault","data","FormData","currentTarget","email","get","password","noValidate","mt","required","autoComplete","type","FormControlLabel","control","mb","weight","columns","format","toLocaleString","rows","StickyHeadTable","page","setPage","rowsPerPage","setRowsPerPage","maxHeight","stickyHeader","column","style","slice","row","hover","code","TablePagination","rowsPerPageOptions","onPageChange","newPage","onRowsPerPageChange","Avatar","m","bgcolor","SpellTransfer","save","App","show_drawer","set_show_drawer","zIndex","src","dragon4","element","ThemeWrapper","palette","main","secondary","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9eb8bfa4.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nconst BACKEND = process.env.REACT_APP_BACKEND;\n\nexport default function ButtonAppBar(props) {\n  const test_button = async () => {\n    try {\n      const response = await fetch(`${BACKEND}/test`);\n      const json_response = await response.json();\n      console.log(json_response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 }}\n            onClick={() => props.open_drawer()}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Button variant=\"contained\" color=\"secondary\" onClick={test_button}>\n            Test\n          </Button>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            Mad Goat D&D Character Creator\n          </Typography>\n          <h3 color=\"inherit\">Guest </h3>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}\n","import { atom } from \"recoil\";\nconst characterAtom = atom({\n  key: \"characterAtom\", // unique ID (with respect to other atoms/selectors)\n  default: {}, // default value (aka initial value)\n});\n\nexport default characterAtom;\n","import { useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport characterAtom from \"../atoms/character_atom\";\n\nconst useCharacter = () => {\n  const [character, set_character] = useRecoilState(characterAtom);\n\n  return {\n    character,\n    set_character,\n  };\n};\n\n\n\nexport default useCharacter;\n","import React, { useEffect, useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Drawer from \"@mui/material/Drawer\";\nimport Button from \"@mui/material/Button\";\nimport List from \"@mui/material/List\";\nimport Divider from \"@mui/material/Divider\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport InboxIcon from \"@mui/icons-material/MoveToInbox\";\nimport MailIcon from \"@mui/icons-material/Mail\";\nimport { Link } from \"react-router-dom\";\nimport useCharacter from \"./hooks/useCharacter\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport GroupAddIcon from \"@mui/icons-material/GroupAdd\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport ArticleIcon from \"@mui/icons-material/Article\";\nimport PersonAddAltIcon from \"@mui/icons-material/PersonAddAlt\";\nimport AutoFixHighIcon from \"@mui/icons-material/AutoFixHigh\";\nimport SportsKabaddiIcon from \"@mui/icons-material/SportsKabaddi\";\nexport default function NavDrawer(props) {\n  const { character } = useCharacter();\n  const [navList, set_navList] = useState([]);\n\n  useEffect(() => {\n    console.log(character);\n    if (character.name) {\n      set_navList([\n        { text: \"Home\", path: \"/\", icon: <HomeIcon /> },\n        {\n          text: \"Generate Character\",\n          path: \"/GenChar\",\n          icon: <GroupAddIcon />,\n        },\n        {\n          text: \"Spell List\",\n          path: \"/SpellTransfer\",\n          icon: <AutoFixHighIcon />,\n        },\n        {\n          text: \"Skill List\",\n          path: \"/SkillTransfer\",\n          icon: <SportsKabaddiIcon />,\n        },\n        {\n          text: \"Saved Characters\",\n          path: \"SavedCharacters\",\n          icon: <SaveIcon />,\n        },\n\n        {\n          text: \"Current Character\",\n          path: \"new_character\",\n          icon: <PersonIcon />,\n        },\n        {},\n        { text: \"Blank Sheet\", path: \"blank_character\", icon: <ArticleIcon /> },\n        { text: \"Sign In\", path: \"sign_in\", icon: <PersonAddAltIcon /> },\n      ]);\n    } else {\n      set_navList([\n        { text: \"Home\", path: \"/\", icon: <HomeIcon /> },\n        {\n          text: \"Generate Character\",\n          path: \"/GenChar\",\n          icon: <GroupAddIcon />,\n        },\n        {\n          text: \"Saved Characters\",\n          path: \"SavedCharacters\",\n          icon: <SaveIcon />,\n        },\n        {},\n        { text: \"Blank Sheet\", path: \"blank_character\", icon: <ArticleIcon /> },\n        { text: \"Sign In\", path: \"SignIn\", icon: <PersonAddAltIcon /> },\n      ]);\n    }\n  }, [character]);\n  const list = () => (\n    <Box role=\"presentation\" sx={{ width: \"20vw\", minWidth: \"200px\" }}>\n      <List>\n        {navList.map((item, index) => {\n          if (!item.text) {\n            return <Divider key={\"nav-\" + index} />;\n          }\n          return (\n            <ListItem\n              button\n              key={\"nav-\" + index}\n              component={Link}\n              to={item.path}\n            >\n              <ListItemIcon>{item.icon}</ListItemIcon>\n              <ListItemText primary={item.text} />\n            </ListItem>\n          );\n        })}\n      </List>\n    </Box>\n  );\n\n  return (\n    <div>\n      <Drawer anchor={\"left\"} open={props.open} onClose={props.onClose}>\n        {list()}\n      </Drawer>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport List from \"@mui/material/List\";\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Button from \"@mui/material/Button\";\nimport Divider from \"@mui/material/Divider\";\nimport { Paper } from \"@mui/material\";\n\nfunction not(a, b) {\n  return a.filter((value) => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n  return a.filter((value) => b.indexOf(value) !== -1);\n}\n\nfunction union(a, b) {\n  return [...a, ...not(b, a)];\n}\n\nexport default function SkillTransfer() {\n  const [checked, setChecked] = React.useState([]);\n  const [left, setLeft] = React.useState([\n    \"Perception\",\n    \"History\",\n    \"Arcane\",\n    \"Pick Locks\",\n    \"Disguise\",\n    \"Cooking\",\n    \"Athletics\",\n  ]);\n  const [right, setRight] = React.useState([\n    \"Tracking\",\n    \"Grappling\",\n    \"Weapon Smithing\",\n    \"Leather Working\",\n    \"Potion Making\",\n    \"Sneaking\",\n    \"Find Traps\",\n  ]);\n\n  const leftChecked = intersection(checked, left);\n  const rightChecked = intersection(checked, right);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const numberOfChecked = (items) => intersection(checked, items).length;\n\n  const handleToggleAll = (items) => () => {\n    if (numberOfChecked(items) === items.length) {\n      setChecked(not(checked, items));\n    } else {\n      setChecked(union(checked, items));\n    }\n  };\n\n  const handleCheckedRight = () => {\n    setRight(right.concat(leftChecked));\n    setLeft(not(left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  const handleCheckedLeft = () => {\n    setLeft(left.concat(rightChecked));\n    setRight(not(right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  const customList = (title, items) => (\n    <Card sx={{ marginTop: 6, backgroundColor: \"rgba(255,255,255,.95)\" }}>\n      <CardHeader\n        sx={{ px: 2, py: 1 }}\n        avatar={\n          <Checkbox\n            onClick={handleToggleAll(items)}\n            checked={\n              numberOfChecked(items) === items.length && items.length !== 0\n            }\n            indeterminate={\n              numberOfChecked(items) !== items.length &&\n              numberOfChecked(items) !== 0\n            }\n            disabled={items.length === 0}\n            inputProps={{\n              \"aria-label\": \"all items selected\",\n            }}\n          />\n        }\n        title={title}\n        subheader={`${numberOfChecked(items)}/${items.length} selected`}\n      />\n      <Divider />\n      <Paper elevation={10} sx={{ backgroundColor: \"rgba(255,255,255,.95)\" }}>\n        <List\n          sx={{\n            width: 250,\n            height: 430,\n            backgroundColor: \"rgba(255,255,255,.95)\",\n            overflow: \"auto\",\n          }}\n          dense\n          component=\"div\"\n          role=\"list\"\n        >\n          {items.map((value) => {\n            const labelId = `transfer-list-all-item-${value}-label`;\n\n            return (\n              <ListItem\n                key={value}\n                role=\"listitem\"\n                button\n                onClick={handleToggle(value)}\n              >\n                <ListItemIcon>\n                  <Checkbox\n                    checked={checked.indexOf(value) !== -1}\n                    tabIndex={-1}\n                    disableRipple\n                    inputProps={{\n                      \"aria-labelledby\": labelId,\n                    }}\n                  />\n                </ListItemIcon>\n                <ListItemText id={labelId} primary={` ${value}`} />\n              </ListItem>\n            );\n          })}\n          <ListItem />\n        </List>\n      </Paper>\n    </Card>\n  );\n\n  return (\n    <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\n      <Grid item>{customList(\"Choices\", left)}</Grid>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"center\">\n          <Button\n            sx={{ my: 0.5, backgroundColor: \"rgba(255,255,255,.95)\" }}\n            variant=\"outlined\"\n            size=\"small\"\n            onClick={handleCheckedRight}\n            disabled={leftChecked.length === 0}\n            aria-label=\"move selected right\"\n          >\n            &gt;\n          </Button>\n          <Button\n            sx={{ my: 0.5, backgroundColor: \"rgba(255,255,255,.95)\" }}\n            variant=\"outlined\"\n            size=\"small\"\n            onClick={handleCheckedLeft}\n            disabled={rightChecked.length === 0}\n            aria-label=\"move selected left\"\n          >\n            &lt;\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid item>{customList(\"Chosen\", right)}</Grid>\n    </Grid>\n  );\n}\n","const get_random_main = () => {\n  const mainWeapon = [\n    \"Long-Sword\",\n    \"Staff\",\n    \"Long-Bow\",\n    \"Dagger\",\n    \"Battle-Axe\",\n    \"Short-Sword\",\n    \"War-Hammer\",\n  ];\n  return mainWeapon[Math.floor(Math.random() * 7)];\n};\nconst get_start_equipment = () => {\n  const startEquip = [\"Bed-Roll, 5 Torches, 40ft Rope, Flint, Water Skin, \"];\n  return startEquip[Math.floor(Math.random(1))];\n};\nconst get_start_equipment2 = () => {\n  const startEquip2 = [\"Hooded Lantern, 5 Days Rations.\"];\n  return startEquip2[Math.floor(Math.random(1))];\n};\nconst get_random_off = () => {\n  const offWeapon = [\n    \"Long-Sword\",\n    \"Staff\",\n    \"Long-Bow\",\n    \"Dagger\",\n    \"Battle-Axe\",\n    \"Short-Sword\",\n    \"War-Hammer\",\n  ];\n  return offWeapon[Math.floor(Math.random() * 7)];\n};\nconst get_random_skill = () => {\n  const randSkill = [\n    \"Athletics\",\n    \"Pick Locks\",\n    \"Persuasion\",\n    \"Acrobatics\",\n    \"Perception\",\n    \"Grappling\",\n    \"History\",\n  ];\n  return randSkill[Math.floor(Math.random() * 7)];\n};\nconst get_random_spell = () => {\n  const randSpell = [\n    \"Magic-Missile\",\n    \"Detect Magic\",\n    \"Minor Healing\",\n    \"Flame Strike\",\n    \"Dispel Magic\",\n    \"Lighting Bolt\",\n    \"Chilling Grasp\",\n  ];\n  return randSpell[Math.floor(Math.random() * 7)];\n};\n\n//Stats random dice rolls 2-6\n\nconst roll_dice = (number_of_rolls) => {\n  let total = 0;\n  for (let i = 0; i < number_of_rolls; i++) {\n    total += Math.floor(Math.random() * 6) + 1;\n  }\n  return total;\n};\n\nlet hitDice = \"1D6\";\n\nconst hit_dice = (number_of_rolls) => {\n  let total = 0;\n  for (let i = 0; i < number_of_rolls; i++) {\n    total += Math.floor(Math.random() * 6) + 1;\n  }\n  return total;\n};\nconst hit_dice4 = (number_of_rolls) => {\n  let total = 0;\n  for (let i = 0; i < number_of_rolls; i++) {\n    total += Math.floor(Math.random() * 4) + 1;\n  }\n  return total;\n};\nconst hit_dice8 = (number_of_rolls) => {\n  let total = 0;\n  for (let i = 0; i < number_of_rolls; i++) {\n    total += Math.floor(Math.random() * 8) + 1;\n  }\n  return total;\n};\nconst hit_dice12 = (number_of_rolls) => {\n  let total = 0;\n  for (let i = 0; i < number_of_rolls; i++) {\n    total += Math.floor(Math.random() * 6) + 1;\n  }\n  return total;\n};\n\n//gender\nconst get_random_sex = () => {\n  const gender = [\"Male\", \"Female\"];\n\n  return gender[Math.floor(Math.random() * 2)];\n};\n\n//get Alignment\nconst get_random_alignment = () => {\n  return [\n    \"Lawful Good\",\n    \"Chaotic Good\",\n    \"Neutral Good\",\n    \"Lawful Neutral\",\n    \"Chaotic Neutral\",\n    \"Lawful Evil\",\n    \"Chaotic Evil\",\n    \"Neutral Evil\",\n  ][Math.floor(Math.random() * 7)];\n};\n\n//Get Race\nconst get_random_race = () => {\n  return [\n    \"Human\",\n    \"Half-Elf\",\n    \"Elf\",\n    \"Half-Orc\",\n    \"Gnome\",\n    \"Dwarf\",\n    \"Drow\",\n    \"Tiefling\",\n  ][Math.floor(Math.random() * 8)];\n};\n\n//Get Class\n// function that returns a randomized DnD Class\nconst get_random_class = () => {\n  const _class = [\n    \"Druid\",\n    \"Cleric\",\n    \"Fighter\",\n    \"Rogue\",\n    \"Ranger\",\n    \"Wizard\",\n    \"Monk\",\n    \"Sorcerer\",\n    \"Palladin\",\n    \"Barbarian\",\n    \"Bard\",\n    \"Warlock\",\n  ];\n  return _class[Math.floor(Math.random() * 12)];\n};\n\n//Hair and eye colors\nconst get_random_hair = () => {\n  const hairColor = [\n    \"Black\",\n    \"Brown\",\n    \"Red\",\n    \"Blonde\",\n    \"White\",\n    \"Grey\",\n    \"Bald\",\n  ];\n  return hairColor[Math.floor(Math.random() * 7)];\n};\n\nconst get_random_eye = () => {\n  const eyeColor = [\"Black\", \"Brown\", \"Green\", \"Hazel\", \"Blue\", \"Grey\"];\n\n  return eyeColor[Math.floor(Math.random() * 6)];\n};\n\n//Gets base hieght at weight\nconst get_random_height = () => {\n  return Math.floor(Math.random() * 8) + 38;\n};\nconst get_random_weight = () => {\n  return Math.floor(Math.random() * 40) + 80;\n};\n\n//generates a random level between 1 and 20\nconst get_random_level = () => {\n  return Math.floor(Math.random() * 20) + 1;\n};\n//Age date\nconst get_random_age = () => {\n  return Math.floor(Math.random() * 17) + 1;\n};\n\n//Bonus stats declaration\n\nconst get_str_bonus = (strength) => {\n  let strBonus = 0;\n  if (strength === 13 || strength === 14) {\n    strBonus = 1;\n  } else if (strength === 15 || strength === 16) {\n    strBonus = 2;\n  } else if (strength === 17 || strength === 18) {\n    strBonus = 3;\n  } else if (strength === 19 || strength === 20) {\n    strBonus = 4;\n  } else if (strength > 20) {\n    strBonus = 5;\n  }\n  return strBonus;\n};\n\nconst get_dex_bonus = (dexterity) => {\n  let dexBonus = 0;\n  if (dexterity === 13 || dexterity === 14) {\n    dexBonus = 1;\n  } else if (dexterity === 15 || dexterity === 16) {\n    dexBonus = 2;\n  } else if (dexterity === 17 || dexterity === 18) {\n    dexBonus = 3;\n  } else if (dexterity === 19 || dexterity === 20) {\n    dexBonus = 4;\n  } else if (dexterity > 20) {\n    dexBonus = 5;\n  }\n  return dexBonus;\n};\n\nconst get_con_bonus = (constitution) => {\n  let conBonus = 0;\n  if (constitution === 13 || constitution === 14) {\n    conBonus = 1;\n  } else if (constitution === 15 || constitution === 16) {\n    conBonus = 2;\n  } else if (constitution === 17 || constitution === 18) {\n    conBonus = 3;\n  } else if (constitution === 19 || constitution === 20) {\n    conBonus = 4;\n  } else if (constitution > 20) {\n    conBonus = 5;\n  }\n  return conBonus;\n};\n\nconst get_int_bonus = (intelligence) => {\n  let intBonus = 0;\n  if (intelligence === 13 || intelligence === 14) {\n    intBonus = 1;\n  } else if (intelligence === 15 || intelligence === 16) {\n    intBonus = 2;\n  } else if (intelligence === 17 || intelligence === 18) {\n    intBonus = 3;\n  } else if (intelligence === 19 || intelligence === 20) {\n    intBonus = 4;\n  } else if (intelligence > 20) {\n    intBonus = 5;\n  }\n  return intBonus;\n};\n\nconst get_wis_bonus = (wisdom) => {\n  let wisBonus = 0;\n  if (wisdom === 13 || wisdom === 14) {\n    wisBonus = 1;\n  } else if (wisdom === 15 || wisdom === 16) {\n    wisBonus = 2;\n  } else if (wisdom === 17 || wisdom === 18) {\n    wisBonus = 3;\n  } else if (wisdom === 19 || wisdom === 20) {\n    wisBonus = 4;\n  } else if (wisdom > 20) {\n    wisBonus = 5;\n  }\n  return wisBonus;\n};\n\nconst get_cha_bonus = (charisma) => {\n  let chaBonus = 0;\n  if (charisma === 13 || charisma === 14) {\n    chaBonus = 1;\n  } else if (charisma === 15 || charisma === 16) {\n    chaBonus = 2;\n  } else if (charisma === 17 || charisma === 18) {\n    chaBonus = 3;\n  } else if (charisma === 19 || charisma === 20) {\n    chaBonus = 4;\n  } else if (charisma > 20) {\n    chaBonus = 5;\n  }\n  return chaBonus;\n};\n\n//Rolls for stats and compiles char data\nconst get_character_choices = (count) => {\n  const choices = [];\n  for (let i = 0; i < count; i++) {\n    const level = get_random_level();\n    const expPoints = level * 2500 - Math.floor(Math.random() * 2499);\n    const new_character = {\n      race: get_random_race(),\n      _class: get_random_class(),\n      level,\n      alignment: get_random_alignment(),\n      strength: roll_dice(3),\n      liftBend: roll_dice(4),\n      carryWeight: roll_dice(),\n      dexterity: roll_dice(3),\n      constitution: roll_dice(3),\n      intelligence: roll_dice(3),\n      wisdom: roll_dice(3),\n      charisma: roll_dice(3),\n      charHeight: get_random_height(),\n      charWeight: get_random_weight(),\n      hairColor: get_random_hair(),\n      eyeColor: get_random_eye(),\n      hitPoints: hit_dice(level),\n      mainWeapon: get_random_main(),\n      randSpell: get_random_spell(),\n      randSkill: get_random_skill(),\n      startEquip: get_start_equipment(),\n      startEquip2: get_start_equipment2(),\n      expPoints,\n      dodge: 11,\n      hitDice: hitDice,\n      investigation: 11,\n      skillBonus: 0,\n      perception: 11,\n      insight: 11,\n      charm: 11,\n      intimidate: 11,\n      armorClass: 11,\n      thaco: 11,\n      speed: 30,\n      saveThrow: 11,\n      initiative: 0,\n      gender: get_random_sex(),\n      age: get_random_age(),\n    };\n    console.log(new_character);\n    choices.push(new_character);\n  }\n\n  //This adjusts stat scores for race\n  const bonus_choices = choices.map((character, j) => {\n    const new_character = { ...character };\n    //RACE Bonus\n\n    if (new_character.gender === \"Female\") {\n      new_character.charWeight -= Math.floor(Math.random() * 25) + 1;\n      new_character.charHeight -= Math.floor(Math.random() * 5) + 1;\n    }\n\n    if (new_character.race === \"Elf\") {\n      new_character.dexterity += 2;\n      new_character.charHeight += Math.floor(Math.random() * 8) + 18;\n      new_character.charWeight += Math.floor(Math.random() * 10) + 50;\n      new_character.age +=\n        Math.floor(Math.random() * 100) + 23 + new_character.level;\n    }\n    if (new_character.race === \"Half-Orc\") {\n      new_character.strength += 3;\n\n      new_character.constitution += 1;\n      new_character.intelligence -= 2;\n      new_character.charHeight += Math.floor(Math.random() * 7) + 32;\n      new_character.charWeight +=\n        Math.floor(Math.random() * 10) + new_character.charHeight * 1.5;\n      new_character.age =\n        Math.floor(Math.random() * 10) + 16 + new_character.level;\n    }\n    if (new_character.race === \"Dwarf\") {\n      new_character.strength += 1;\n      new_character.constitution += 1;\n      new_character.charHeight += Math.floor(Math.random() * 10) + 8;\n      new_character.charWeight += Math.floor(Math.random() * 10) + 40;\n      new_character.age =\n        Math.floor(Math.random() * 100) + 35 + new_character.level;\n    }\n    if (new_character.race === \"Half-Elf\") {\n      new_character.dexterity += 1;\n      new_character.charisma += 1;\n      new_character.charHeight += Math.floor(Math.random() * 10) + 20;\n      new_character.charWeight += Math.floor(Math.random() * 25) + 50;\n      new_character.age =\n        Math.floor(Math.random() * 35) + 19 + new_character.level;\n    }\n    if (new_character.race === \"Gnome\") {\n      new_character.intelligence += 3;\n      new_character.dexterity += 2;\n      new_character.strength = hit_dice12(2);\n    }\n    if (new_character.race === \"Drow\") {\n      new_character.charisma -= 1;\n      new_character.dexterity += 2;\n      new_character.constitution += 1;\n      new_character.charWeight -= 15;\n      new_character.charHeight += Math.floor(Math.random() * 7) + 20;\n      new_character.charWeight +=\n        Math.floor(Math.random() * 3) + new_character.charHeight;\n      new_character.age =\n        Math.floor(Math.random() * 100) + 22 + new_character.level;\n    }\n    if (new_character.race === \"Tiefling\") {\n      new_character.intelligence += 1;\n      new_character.constitution += 1;\n      new_character.charHeight += Math.floor(Math.random() * 8) + 26;\n      new_character.charWeight += Math.floor(Math.random() * 75) + 50;\n      new_character.age = Math.floor(Math.random() * 60) + 17;\n    }\n    if (new_character.race === \"Human\") {\n      new_character.strength += Math.floor(Math.random() * 6) - 2;\n      new_character.dexterity += Math.floor(Math.random() * 6) - 2;\n      new_character.constitution += Math.floor(Math.random() * 6) - 2;\n      new_character.intelligence += Math.floor(Math.random() * 6) - 2;\n      new_character.wisdom += Math.floor(Math.random() * 6) - 2;\n      new_character.charisma += Math.floor(Math.random() * 6) - 2;\n      new_character.charHeight += Math.floor(Math.random() * 9) + 30;\n      new_character.charWeight += Math.floor(Math.random() * 70) + 40;\n      new_character.age =\n        Math.floor(Math.random() * 10) + 17 + new_character.level;\n    }\n\n    // Adjusts Class and level Bonuses\n    if (new_character._class === \"Fighter\") {\n      new_character.strength = Math.floor(\n        (new_character.strength = roll_dice(3) + 3)\n      );\n      new_character.constitution += Math.floor(new_character.level / 5) + 1;\n      new_character.strength += Math.floor(new_character.level / 4) + 1;\n      new_character.hitDice = \"2d4\";\n\n      new_character.hitPoints = hit_dice4(new_character.level) * 2;\n    }\n\n    if (new_character._class === \"Rogue\") {\n      new_character.dexterity = Math.floor(\n        (new_character.dexterity = roll_dice(3) + 3)\n      );\n      new_character.dexterity += Math.floor(new_character.level / 4) + 1;\n      new_character.charisma += Math.floor(new_character.level / 5) + 1;\n      new_character.hitDice = \"1d6\";\n      new_character.hitPoints = hit_dice(new_character.level);\n    }\n    if (new_character._class === \"Wizard\") {\n      new_character.intelligence = Math.floor(\n        (new_character.intelligence = roll_dice(3) + 3)\n      );\n      new_character.intelligence += Math.floor(new_character.level / 4) + 1;\n      new_character.wisdom += Math.floor(new_character.level / 5) + 1;\n      new_character.hitDice = \"1d4\";\n      new_character.hitPoints = hit_dice4(new_character.level);\n    }\n    if (new_character._class === \"Sorcerer\") {\n      new_character.intelligence = Math.floor(\n        (new_character.intelligence = roll_dice(3) + 3)\n      );\n      new_character.intelligence += Math.floor(new_character.level / 4) + 1;\n      new_character.constitution += Math.floor(new_character.level / 5) + 1;\n      new_character.hitDice = \"1d4\";\n      new_character.hitPoints = hit_dice4(new_character.level);\n    }\n    if (new_character._class === \"Warlock\") {\n      new_character.intelligence = Math.floor(\n        (new_character.intelligence = roll_dice(3) + 3)\n      );\n      new_character.intelligence += Math.floor(new_character.level / 4) + 1;\n      new_character.constitution += Math.floor(new_character.level / 5) + 1;\n      new_character.hitDice = \"1d4\";\n      new_character.hitPoints = hit_dice4(new_character.level);\n    }\n    if (new_character._class === \"Ranger\") {\n      new_character.dexterity = Math.floor(\n        (new_character.dexterity = roll_dice(3) + 3)\n      );\n      new_character.dexterity += Math.floor(new_character.level / 4) + 1;\n      new_character.wisdom += Math.floor(new_character.level / 5) + 1;\n      new_character.hitDice = \"1d6\";\n      new_character.hitPoints = hit_dice(new_character.level);\n    }\n    if (new_character._class === \"Monk\") {\n      new_character.dexterity = Math.floor(\n        (new_character.dexterity = roll_dice(3) + 3)\n      );\n      new_character.dexterity += Math.floor(new_character.level / 4) + 1;\n      new_character.constitution += Math.floor(new_character.level / 5) + 1;\n      new_character.hitDice = \"2d4\";\n      new_character.hitPoints = hit_dice4(new_character.level) * 2;\n    }\n    if (new_character._class === \"Cleric\") {\n      new_character.wisdom = Math.floor((new_character.wisdom = roll_dice(4)));\n      new_character.wisdom += Math.floor(new_character.level / 4) + 1;\n      new_character.constitution += Math.floor(new_character.level / 5) + 1;\n      new_character.hitDice = \"1d6\";\n      new_character.hitPoints = hit_dice(new_character.level);\n    }\n    if (new_character._class === \"Bard\") {\n      new_character.wisdom = Math.floor((new_character.charisma = hit_dice(4)));\n      new_character.wisdom += Math.floor(new_character.level / 5) + 1;\n      new_character.charisma += Math.floor(new_character.level / 4) + 1;\n      new_character.hitDice = \"1d6\";\n      new_character.hitPoints = hit_dice(new_character.level);\n    }\n    if (new_character._class === \"Druid\") {\n      new_character.wisdom = Math.floor((new_character.wisdom = roll_dice(4)));\n      new_character.wisdom += Math.floor(new_character.level / 4) + 1;\n      new_character.constitution += Math.floor(new_character.level / 5) + 1;\n      new_character.hitDice = \"1d6\";\n      new_character.hitPoints = hit_dice(new_character.level);\n    }\n    if (new_character._class === \"Palladin\") {\n      new_character.strength = Math.floor(\n        (new_character.strength = roll_dice(3) + 3)\n      );\n      new_character.strength += Math.floor(new_character.level / 5) + 1;\n      new_character.constitution += Math.floor(new_character.level / 5) + 1;\n      new_character.wisdom += Math.floor(new_character.level / 6) + 1;\n      new_character.hitDice = \"2d4\";\n      new_character.hitPoints = hit_dice4(new_character.level) * 2;\n    }\n    if (new_character._class === \"Barbarian\") {\n      new_character.strength = Math.floor(\n        (new_character.strength = roll_dice(3))\n      );\n      new_character.intelligence = Math.floor(\n        (new_character.intelligence = roll_dice(2) + 2)\n      );\n      new_character.strength += Math.floor(new_character.level / 5) + 1;\n      new_character.constitution += Math.floor(new_character.level / 5) + 1;\n      new_character.hitDice = \"2d6\";\n      new_character.hitPoints = hit_dice12(new_character.level) * 2;\n      // new_character.hpBonus = new_character.hpBonus * new_character.level;\n      // new_character.hitPoints = new_character.hitPoints + new_character.hpBonus;\n    }\n\n    //strength adjestors\n    new_character.strBonus = get_str_bonus(new_character.strength); //\n    new_character.liftBend =\n      new_character.strength * 20 + new_character.strBonus * 100;\n    new_character.carryWeight = new_character.liftBend / 4;\n\n    //dex adjustors\n    new_character.dexBonus = get_dex_bonus(new_character.dexterity); //\n    new_character.dodge = new_character.dodge - new_character.dexBonus;\n    new_character.speed = new_character.speed + new_character.dexBonus * 2;\n    new_character.armorClass = 11 + new_character.dexBonus;\n    new_character.thaco = 11 - new_character.dexBonus;\n    new_character.initiative = new_character.dexBonus;\n\n    console.log(new_character.hitPoints);\n    //con adjustors\n    new_character.conBonus = get_con_bonus(new_character.constitution); //\n    new_character.conBonusTotal = new_character.conBonus * new_character.level;\n    new_character.hitPoints =\n      new_character.hitPoints + new_character.conBonusTotal;\n    new_character.saveThrow = new_character.saveThrow - new_character.conBonus;\n\n    //int adjusors\n    new_character.intBonus = get_int_bonus(new_character.intelligence); //\n    new_character.investigation =\n      new_character.investigation - new_character.intBonus;\n    new_character.skillBonus = new_character.intBonus;\n\n    //wis adjustors\n    new_character.wisBonus = get_wis_bonus(new_character.wisdom); //\n    new_character.perception =\n      new_character.perception - new_character.wisBonus;\n    new_character.insight = new_character.insight - new_character.wisBonus;\n\n    //cha adjustors\n    new_character.chaBonus = get_cha_bonus(new_character.charisma); //\n    new_character.charm = new_character.charm - new_character.chaBonus;\n    new_character.intimidate =\n      new_character.intimidate - new_character.chaBonus;\n    //Other adjustors\n\n    console.log(new_character.hitPoints);\n    console.log(new_character.conBonus);\n\n    return new_character;\n  });\n  return bonus_choices;\n};\n\n// const hit_points = () => {\n//   return Math.floor(Math.random() * 6) * get_random_level;\n// };\n\nexport default get_character_choices;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid, Typography, Box } from \"@mui/material\";\nimport { computeHeadingLevel } from \"@testing-library/react\";\nimport { boxSizing } from \"@mui/system\";\n\nconst GenChar = (props) => {\n  const [items, setItems] = useState([]);\n  const character = props.combined_character;\n  console.table(character);\n  const labels = {\n    name: \"Name:\",\n    _class: \"Class:\",\n    strength: \"Strength:\",\n    dexterity: \"Dexterity:\",\n    constitution: \"Constitution:\",\n    intelligence: \"Intelligence:\",\n    wisdom: \"Wisdom:\",\n    charisma: \"Charisma:\",\n    race: \"Race:\",\n    level: \"Level:\",\n    alignment: \"Alignment:\",\n    gender: \"Gender:\",\n  };\n  const keys = [\n    \"name\",\n    \"race\",\n    \"_class\",\n    \"level\",\n    \"alignment\",\n    \"gender\",\n    \"strength\",\n    \"dexterity\",\n    \"constitution\",\n    \"intelligence\",\n    \"wisdom\",\n    \"charisma\",\n  ];\n\n  return (\n    <Box sx={{ maxWidth: \"300px\", boxSizing: \"border-box\", padding: \"16px\" }}>\n      <Grid container spacing={1}>\n        {keys.map((key, i) => {\n          return (\n            <Grid\n              item\n              container\n              spacing={2}\n              key={key}\n              justifyContent=\"space-around\"\n            >\n              <Grid item xs={6}>\n                <Typography variant=\"body1\" fontWeight=\"bold\">\n                  {labels[key]}\n                </Typography>\n              </Grid>\n              <Grid item xs={3}>\n                <Typography variant=\"body1\">{character[key]}</Typography>\n              </Grid>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </Box>\n  );\n};\n\nGenChar.propTypes = {};\n\nexport default GenChar;\n","import React from \"react\";\nimport { ReactDOM } from \"react-dom\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n  Link,\n  useLocation,\n  useNavigate,\n} from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableBody,\n  TableRow,\n  TextField,\n  Button,\n  Dialog,\n  DialogContentText,\n  DialogContent,\n  DialogTitle,\n  DialogActions,\n  Grid,\n  TableCell,\n  Container,\n} from \"@mui/material\";\n\n//\n\nimport get_character_choices from \"../Functions/character_choices\";\nimport GenChar from \"../CharacterPage/GenChar\";\nimport useCharacter from \"../hooks/useCharacter\";\nconst superheroes = require(\"superheroes\");\n\nconst mySuperHeroName = superheroes.random();\n\nconst store_char_to_db = (character_data) => {\n  console.log(character_data);\n};\n\nconst CharacterChoices = () => {\n  const [character_data, set_character_data] = useState([]);\n  const [character_name, set_character_name] = useState(\"\");\n  const [selected_character, set_selected_character] = useState(null);\n\n  const { character, set_character } = useCharacter();\n\n  // const get_random_user_data = async () => {\n  //   try {\n  //     const results = await fetch(\"https://www.dnd5eapi.co/api/monsters\");\n  //     const json_results = await results.json();\n  //     const monsters = json_results.results;\n  //     // console.log(monsters);\n  //     for (let i = 0; i < monsters.length; i++) {\n  //       console.log(monsters[i].url);\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   console.log(\"Im inside my use Effect\");\n  //   get_random_user_data(5);\n  // }, [character_name]);\n\n  // console.log(\"IM outside my useEffect\");\n\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const handle_choices_click = () => {\n    const choices = get_character_choices(10);\n    set_character_data(choices);\n    // const stats = get_character_stats();\n    // set_character_data(stats);\n  };\n  return (\n    <div>\n      <Container sx={{ paddingTop: \"1rem\" }}>\n        <Grid\n          container\n          spacing={2}\n          justifyContent={\"space-around\"}\n          alignItems=\"center\"\n        >\n          <Grid item xs={4}>\n            <TextField\n              sx={{ width: \"100%\" }}\n              value={mySuperHeroName}\n              onChange={(event) => {\n                set_character_name(event.target.value);\n              }}\n              helperText={\n                Boolean(character_name.length === 0)\n                  ? \"Please enter a character Name\"\n                  : \"\"\n              }\n              label=\"Character Name\"\n              //error={Boolean(character_name.length === 0)}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <Button\n              className=\"button\"\n              onClick={handle_choices_click}\n              color=\"primary\"\n              variant=\"contained\"\n              //disabled={character_name.length === 0}\n            >\n              Get Character Choices\n            </Button>\n          </Grid>\n          <Grid item xs={12} sx={{ backgroundColor: \"rgba(255,255,255,.95)\" }}>\n            <TableContainer>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {/* <TableCell>Name</TableCell> */}\n                    <TableCell>Select</TableCell>\n                    <TableCell>Race</TableCell>\n                    <TableCell>Class</TableCell>\n                    <TableCell>Alignment</TableCell>\n                    <TableCell>Gender</TableCell>\n                    <TableCell align=\"center\">Level</TableCell>\n                    <TableCell align=\"center\">Strength</TableCell>\n                    <TableCell align=\"center\">Dexterity</TableCell>\n                    <TableCell align=\"center\">Constitution</TableCell>\n                    <TableCell align=\"center\">Intelligence</TableCell>\n                    <TableCell align=\"center\">Wisdom</TableCell>\n                    <TableCell align=\"center\">Charisma</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {character_data.length !== 0 &&\n                    // character_name.length !== 0 &&\n                    character_data.map((character, i) => {\n                      return (\n                        <TableRow key={\"Character-\" + i}>\n                          {/* <TableCell>{character_name}</TableCell> */}\n                          <TableCell>\n                            <Button\n                              variant=\"contained\"\n                              color=\"primary\"\n                              onClick={() => set_selected_character(character)}\n                            >\n                              Choose\n                            </Button>\n                          </TableCell>\n                          <TableCell>{character.race}</TableCell>\n                          <TableCell>{character._class}</TableCell>\n                          <TableCell align=\"center\">\n                            {character.alignment}\n                          </TableCell>\n                          <TableCell align=\"center\">\n                            {character.gender}\n                          </TableCell>\n                          <TableCell align=\"center\">\n                            {character.level}\n                          </TableCell>\n\n                          <TableCell align=\"center\">\n                            {character.strength}\n                          </TableCell>\n                          <TableCell align=\"center\">\n                            {character.dexterity}\n                          </TableCell>\n                          <TableCell align=\"center\">\n                            {character.constitution}\n                          </TableCell>\n                          <TableCell align=\"center\">\n                            {character.intelligence}\n                          </TableCell>\n                          <TableCell align=\"center\">\n                            {character.wisdom}\n                          </TableCell>\n                          <TableCell align=\"center\">\n                            {character.charisma}\n                          </TableCell>\n                        </TableRow>\n                      );\n                    })}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n        </Grid>\n      </Container>\n      <Dialog\n        open={Boolean(selected_character)}\n        onClose={() => {\n          set_selected_character(null);\n        }}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Confirm Selected Character?\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Would you like to use the following Character?\n          </DialogContentText>\n\n          <GenChar\n            // selected_character={selected_character}\n            // selected_name={character_name}\n            combined_character={{\n              ...selected_character,\n              name: mySuperHeroName,\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            color=\"secondary\"\n            onClick={() => {\n              set_selected_character(null);\n            }}\n          >\n            Cancel\n          </Button>\n\n          <Button\n            onClick={() => {\n              //<Link to=\"./CharacterPage/NewChar.js\" />;\n              set_character({\n                ...selected_character,\n                name: mySuperHeroName,\n              });\n              navigate(\"/new_character\");\n              set_selected_character(null);\n            }}\n            color=\"primary\"\n            autoFocus\n          >\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nCharacterChoices.propTypes = {};\n\nexport default CharacterChoices;\n","import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\n];\n\nexport default function BasicTable() {\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Dessert (100g serving)</TableCell>\n            <TableCell align=\"right\">Calories</TableCell>\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow\n              key={row.name}\n              sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.calories}</TableCell>\n              <TableCell align=\"right\">{row.fat}</TableCell>\n              <TableCell align=\"right\">{row.carbs}</TableCell>\n              <TableCell align=\"right\">{row.protein}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import * as React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Box from \"@mui/material/Box\";\nimport { Card, Container, Paper } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Input from \"@mui/material/Input\";\nimport FilledInput from \"@mui/material/FilledInput\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport CharacterChoices from \"../Components/CharacterChoices\";\nimport get_character_choices from \"../Functions/character_choices\";\nimport useCharacter from \"../hooks/useCharacter\";\nimport { Grid } from \"@mui/material\";\nimport { Button } from \"@mui/material\";\nimport ComboBox from \"../ComboBox\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select from \"@mui/material/Select\";\nimport WeaponSelect from \"../Functions/weapons\";\nimport BasicTable from \"../Functions/spell_table\";\nimport Save from \"@mui/icons-material/Save\";\nexport default function InputAdornments() {\n  const [values, setValues] = React.useState({\n    // amount: \"\",\n    name: \"\",\n    gender: \"\",\n    level: \"\",\n    race: \"\",\n    _class: \"\",\n    alignment: \"\",\n    strength: \"\",\n    dexterity: \"\",\n    constitution: \"\",\n    intelligence: \"\",\n    wisdom: \"\",\n    charisma: \"\",\n    strBonus: \"\",\n    liftBend: \"\",\n    carryWeight: \"\",\n    dexBonus: \"\",\n    dodge: \"\",\n    speed: \"\",\n    conBonus: \"\",\n    hitDice: \"\",\n    saveThrow: \"\",\n    intBonus: \"\",\n    investBonus: \"\",\n    profBonus: \"\",\n    perceptBonus: \"\",\n    insightBonus: \"\",\n    wisBonus: \"\",\n    charm: \"\",\n    intimidate: \"\",\n    chaBonus: \"\",\n    eyeColor: \"\",\n    hairColor: \"\",\n    height: \"\",\n    age: \"\",\n    mainWeapon: \"\",\n    startEquip: \"\",\n  });\n\n  const { character } = useCharacter();\n\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n  console.log(character);\n\n  return (\n    <Container sx={{ paddingTop: \"2rem\" }} maxWidth={\"md\"}>\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <Paper elevation={8}>\n            <TextField\n              fullWidth\n              sx={{\n                backgroundColor: \"rgba(255,255,255,.95)\",\n                border: \"double\",\n              }}\n              label=\" - Character Name - \"\n              id=\"outlined-start-adornment\"\n              value={character.name}\n              disabled\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n          </Paper>\n        </Grid>\n        <Grid item xs={2}>\n          <Paper elevation={8}>\n            <TextField\n              fullWidth\n              sx={{\n                backgroundColor: \"rgba(255,255,255,.95)\",\n                border: \"double\",\n              }}\n              label=\"-Gender-\"\n              id=\"outlined-start-adornment\"\n              value={character.gender}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n          </Paper>\n        </Grid>\n        <Grid item xs={2}>\n          <Paper elevation={8}>\n            <TextField\n              fullWidth\n              sx={{\n                backgroundColor: \"rgba(255,255,255,.95)\",\n                border: \"double\",\n              }}\n              label=\"-Level-\"\n              id=\"outlined-start-adornment\"\n              value={character.level}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n          </Paper>\n        </Grid>\n\n        <Grid item xs={2}>\n          <Paper elevation={8}>\n            <TextField\n              fullWidth\n              sx={{\n                backgroundColor: \"rgba(255,255,255,.95)\",\n                border: \"double\",\n              }}\n              label=\"-Exerience Points-\"\n              id=\"outlined-start-adornment\"\n              value={character.expPoints}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n          </Paper>\n        </Grid>\n\n        <Grid item xs={3.5}>\n          <Paper elevation={8}>\n            <TextField\n              fullWidth\n              sx={{\n                backgroundColor: \"rgba(255,255,255,.95)\",\n                border: \"double\",\n              }}\n              label=\"-Race- \"\n              id=\"outlined-start-adornment\"\n              value={character.race}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n          </Paper>\n        </Grid>\n\n        <Grid item xs={3.5}>\n          <Paper elevation={8}>\n            <TextField\n              fullWidth\n              sx={{\n                backgroundColor: \"rgba(255,255,255,.95)\",\n                border: \"double\",\n              }}\n              label=\"-Class- \"\n              id=\"outlined-start-adornment\"\n              value={character._class}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n          </Paper>\n        </Grid>\n        <Grid item xs={3.5}>\n          <Paper elevation={8}>\n            <TextField\n              fullWidth\n              sx={{\n                backgroundColor: \"rgba(255,255,255,.95)\",\n                border: \"double\",\n              }}\n              label=\"-Alignment- \"\n              id=\"outlined-start-adornment\"\n              value={character.alignment}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n          </Paper>\n        </Grid>\n        <Grid item xs={1.5}>\n          <Paper elevation={8}>\n            <TextField\n              fullWidth\n              sx={{\n                backgroundColor: \"rgba(255,255,255,.95)\",\n                border: \"double\",\n              }}\n              label=\"-Age- \"\n              id=\"outlined-start-adornment\"\n              value={character.age}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n          </Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper\n            elevation={8}\n            sx={{ backgroundColor: \"rgba(255,255,255,.95)\", border: \"double\" }}\n          >\n            <Grid\n              container\n              spacing={2}\n              sx={{\n                margin: 0,\n                width: \"calc(100% - 16px)\",\n                paddingBottom: \"16px\",\n              }}\n            >\n              <Grid item xs={3}>\n                <TextField\n                  fullWidth\n                  align-label=\"center\"\n                  label=\"Strength\"\n                  id=\"standard-start-adornment\"\n                  value={character?.strength}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  fullWidth\n                  label=\"Str Bonus\"\n                  sx={{ textAlign: \"center\" }}\n                  id=\"standard-start-adornment\"\n                  value={character?.strBonus}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  fullWidth\n                  label=\"Lift/Bend\"\n                  id=\"standard-start-adornment\"\n                  value={character?.liftBend}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  fullWidth\n                  label=\"Carry Weight\"\n                  id=\"standard-start-adornment\"\n                  value={character?.carryWeight}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Dexterity\"\n                  id=\"standard-start-adornment\"\n                  value={character?.dexterity}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Dex Bonus\"\n                  id=\"standard-start-adornment\"\n                  value={character?.dexBonus}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Dodge\"\n                  id=\"standard-start-adornment\"\n                  value={character?.dodge}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Speed\"\n                  id=\"standard-start-adornment\"\n                  value={character?.speed}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Constitution\"\n                  id=\"standard-start-adornment\"\n                  value={character?.constitution}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Con Bonus\"\n                  id=\"standard-start-adornment\"\n                  value={character?.conBonus}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Hit Dice\"\n                  id=\"standard-start-adornment\"\n                  value={character?.hitDice}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Saving Throw\"\n                  id=\"standard-start-adornment\"\n                  value={character?.saveThrow}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Intelligence\"\n                  id=\"standard-start-adornment\"\n                  fullWidth\n                  value={character?.intelligence}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Int Bonus\"\n                  id=\"standard-start-adornment\"\n                  fullWidth\n                  value={character?.intBonus}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Investigation\"\n                  id=\"standard-start-adornment\"\n                  fullWidth\n                  value={character?.investigation}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Skill Bonus\"\n                  id=\"standard-start-adornment\"\n                  fullWidth\n                  value={character?.skillBonus}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Wisdom\"\n                  id=\"standard-start-adornment\"\n                  fullWidth\n                  value={character?.wisdom}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Wis Bonus\"\n                  id=\"standard-start-adornment\"\n                  fullWidth\n                  value={character?.wisBonus}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Perception\"\n                  id=\"standard-start-adornment\"\n                  fullWidth\n                  value={character?.perception}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Insight\"\n                  id=\"standard-start-adornment\"\n                  fullWidth\n                  value={character?.insight}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Charisma\"\n                  id=\"standard-start-adornment\"\n                  fullWidth\n                  value={character?.charisma}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Cha Bonus\"\n                  id=\"standard-start-adornment\"\n                  fullWidth\n                  value={character?.chaBonus}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Charm\"\n                  id=\"standard-start-adornment\"\n                  fullWidth\n                  value={character?.charm}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Intimidate\"\n                  id=\"standard-start-adornment\"\n                  fullWidth\n                  value={character?.intimidate}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={6}>\n          <Paper\n            elevation={8}\n            sx={{ backgroundColor: \"rgba(255,255,255,.95)\", border: \"double\" }}\n          >\n            <Grid\n              container\n              spacing={2}\n              sx={{\n                margin: 0,\n                width: \"calc(100% - 16px)\",\n                paddingBottom: \"16px\",\n              }}\n            >\n              <Grid item xs={3}>\n                <TextField\n                  fullWidth\n                  label=\"Height\"\n                  id=\"outlined-start-adornment\"\n                  value={character?.charHeight}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  fullWidth\n                  label=\"Weight\"\n                  id=\"outlined-start-adornment\"\n                  value={character?.charWeight}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Eye Color\"\n                  id=\"outlined-start-adornment\"\n                  value={character?.eyeColor}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Hair Color\"\n                  id=\"outlined-start-adornment\"\n                  value={character?.hairColor}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Total HP\"\n                  id=\"outlined-start-adornment\"\n                  value={character?.hitPoints}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Initiative +\"\n                  id=\"outlined-start-adornment\"\n                  value={character?.initiative}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"AC\"\n                  id=\"outlined-start-adornment\"\n                  value={character?.armorClass}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"THACO\"\n                  id=\"outlined-start-adornment\"\n                  value={character?.thaco}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n\n          <Grid item xs={6} sx={{ paddingTop: \"1rem\" }} maxWidth={\"md\"}>\n            <Paper\n              elevation={8}\n              sx={{\n                backgroundColor: \"rgba(255,255,255,.95)\",\n                border: \"double\",\n              }}\n            >\n              <TextField\n                fullWidth\n                sx={{ marginTop: \"6px\", marginBottom: \"4px\" }}\n                label=\"-SKILLS- \"\n                id=\"standard-start-adornment\"\n                value={character?.randSkill}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\"></InputAdornment>\n                  ),\n                }}\n                variant=\"standard\"\n              />\n              <TextField\n                fullWidth\n                id=\"standard-start-adornment\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\"></InputAdornment>\n                  ),\n                }}\n                variant=\"standard\"\n              />\n              <TextField\n                fullWidth\n                id=\"standard-start-adornment\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\"></InputAdornment>\n                  ),\n                }}\n                variant=\"standard\"\n              />\n              <TextField\n                fullWidth\n                id=\"standard-start-adornment\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\"></InputAdornment>\n                  ),\n                }}\n                variant=\"standard\"\n              />\n              <TextField\n                fullWidth\n                id=\"standard-start-adornment\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\"></InputAdornment>\n                  ),\n                }}\n                variant=\"standard\"\n              />\n              <TextField\n                fullWidth\n                id=\"standard-start-adornment\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\"></InputAdornment>\n                  ),\n                }}\n                variant=\"standard\"\n              />\n            </Paper>\n          </Grid>\n        </Grid>\n        <Grid item xs={6}>\n          <Card\n            elevation={8}\n            sx={{ backgroundColor: \"rgba(255,255,255,.95)\", border: \"double\" }}\n          >\n            {/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>weapons */}\n            <TextField\n              sx={{ marginTop: \"4px\" }}\n              fullWidth\n              label=\"-Main Hand-\"\n              id=\"standard-start-adornment\"\n              value={character?.mainWeapon}\n              variant=\"standard\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n            />\n            <TextField\n              sx={{ marginTop: \"4px\" }}\n              fullWidth\n              label=\"-Off Hand-\"\n              id=\"standard-start-adornment\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n          </Card>\n          <Grid item sx={{ paddingTop: \"1rem\" }}>\n            <Paper\n              elevation={8}\n              sx={{\n                backgroundColor: \"rgba(255,255,255,.95)\",\n                border: \"double\",\n              }}\n            >\n              <TextField\n                fullWidth\n                sx={{ marginTop: \"8px\" }}\n                label=\"-EQUIPMENT- \"\n                id=\"standard-start-adornment\"\n                value={character?.startEquip}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\"></InputAdornment>\n                  ),\n                }}\n                variant=\"standard\"\n              />\n              <TextField\n                fullWidth\n                id=\"standard-start-adornment\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\"></InputAdornment>\n                  ),\n                }}\n                variant=\"standard\"\n                value={character?.startEquip2}\n              />\n              <TextField\n                fullWidth\n                id=\"standard-start-adornment\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\"></InputAdornment>\n                  ),\n                }}\n                variant=\"standard\"\n              />\n              <TextField\n                fullWidth\n                id=\"standard-start-adornment\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\"></InputAdornment>\n                  ),\n                }}\n                variant=\"standard\"\n              />\n              <TextField\n                fullWidth\n                id=\"standard-start-adornment\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\"></InputAdornment>\n                  ),\n                }}\n                variant=\"standard\"\n              />\n            </Paper>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={6}\n          sx={{ paddingTop: \"1rem\", paddingLeftt: \"1rem\" }}\n          maxWidth={\"md\"}\n        >\n          <Paper\n            elevation={8}\n            sx={{ backgroundColor: \"rgba(255,255,255,.95)\", border: \"double\" }}\n          >\n            <TextField\n              fullWidth\n              sx={{ marginTop: \"6px\" }}\n              label=\"-SPELLS- \"\n              id=\"standard-start-adornment\"\n              value={character?.randSpell}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n            <TextField\n              fullWidth\n              id=\"standard-start-adornment\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n            <TextField\n              fullWidth\n              id=\"standard-start-adornment\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n            <TextField\n              fullWidth\n              id=\"standard-start-adornment\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n            <TextField\n              fullWidth\n              id=\"standard-start-adornment\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n            <TextField\n              fullWidth\n              id=\"standard-start-adornment\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n            <TextField\n              fullWidth\n              id=\"standard-start-adornment\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n            <TextField\n              fullWidth\n              id=\"standard-start-adornment\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n            <TextField\n              fullWidth\n              id=\"standard-start-adornment\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n<Button\n  sx={{ my: 0.5, backgroundColor: \"rgba(255,255,255,.95)\" }}\n  variant=\"outlined\"\n  size=\"small\"\n  onClick={Save}\n  aria-label=\"Save\"\n>\n  Save;\n</Button>;\n\n// export default NewChar;\n","import PropTypes from \"prop-types\";\nimport { Grid } from \"@mui/material\";\nimport { border, Box, color, margin } from \"@mui/system\";\nimport {\n  CenterFocusStrong,\n  Home,\n  Image,\n  PlayCircleFilledWhite,\n} from \"@mui/icons-material\";\nimport * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { Paper } from \"@mui/material\";\nimport { Card } from \"@mui/material\";\n\nconst HomePage = () => {\n  return (\n    <div>\n      <Grid item xs={12}>\n        <Box\n          sx={{\n            position: \"fixed\",\n            border: \"double\",\n            borderColor: \"maroon\",\n            padding: \"5px\",\n            margin: \"10px\",\n            textalign: \"center\",\n            // backgroundsize: \"contain\",\n            // backgroundrepeat: \"no-repeat\",\n            // backgroundposition: \"center\",\n          }}\n        >\n          <img\n            src=\"http://img2.joyreactor.com/pics/post/full/art-CGI-dragon-3329461.jpeg\"\n            alt=\"Dragon\"\n            style={{ margin: \"0 auto\", display: \"flex\" }}\n            position=\"fixed\"\n            textalign=\"center\"\n            zindex=\"-5\"\n          ></img>\n        </Box>\n      </Grid>\n    </div>\n  );\n};\n\nHomePage.propTypes = {};\n\nfunction SignUp(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      backgroundColor=\"rgba(255,255,255,.85)\"\n      zindex=\"5\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nexport default function SignIn() {\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    // eslint-disable-next-line no-console\n    console.log({\n      email: data.get(\"email\"),\n      password: data.get(\"password\"),\n    });\n  };\n\n  return (\n    <Grid>\n      <ThemeProvider theme={theme}>\n        <Container\n          marginTop=\"8\"\n          component=\"main\"\n          maxWidth=\"xs\"\n          backgroundColor=\"rgba(255,255,255,.85)\"\n        >\n          <CssBaseline />\n          <div>\n            <Card\n              sx={{\n                zindex: 5,\n                backgroundColor: \"rgba(255,255,255,.95)\",\n                border: \"double\",\n              }}\n              elevation={8}\n            >\n              <Box\n                sx={{\n                  marginTop: 1.5,\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Box\n                  sx={{\n                    backgroundColor: \"rgba(255,255,255,.85)\",\n\n                    marginTop: 10,\n                    zindex: 10,\n                  }}\n                >\n                  <Typography component=\"h2\" variant=\"h5\">\n                    Sign in\n                  </Typography>\n                </Box>\n                <Box\n                  component=\"form\"\n                  onSubmit={handleSubmit}\n                  noValidate\n                  sx={{ mt: 1, marginTop: \"10px\" }}\n                >\n                  <TextField\n                    sx={{\n                      backgroundColor: \"rgba(255,255,255,.85)\",\n                      border: \"double\",\n                    }}\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    autoFocus\n                  />\n                  <Box sx={{}}>\n                    <TextField\n                      sx={{\n                        backgroundColor: \"rgba(255,255,255,.85)\",\n                        border: \"double\",\n                      }}\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      name=\"password\"\n                      label=\"Password\"\n                      type=\"password\"\n                      id=\"password\"\n                      autoComplete=\"current-password\"\n                    />\n                  </Box>\n                  <FormControlLabel\n                    sx={{\n                      backgroundColor: \"rgba(255,255,255,.95)\",\n                    }}\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    control={<Checkbox value=\"remember\" color=\"primary\" />}\n                    label=\"Remember me\"\n                  />\n                  <Button type=\"submit\" fullWidth variant=\"contained\">\n                    Sign In\n                  </Button>\n                  <Grid container>\n                    <Grid item>\n                      <Link href=\"#\" variant=\"body2\">\n                        Forgot password?\n                      </Link>\n                    </Grid>\n                    <Grid item>\n                      <Link href=\"#\" variant=\"body2\">\n                        {\"Don't have an account? Sign Up\"}\n                      </Link>\n                    </Grid>\n                  </Grid>\n                </Box>\n              </Box>\n              <SignUp sx={{ mt: 8, mb: 4 }} />\n            </Card>\n          </div>\n        </Container>\n      </ThemeProvider>\n    </Grid>\n  );\n}\n","import * as React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Box from \"@mui/material/Box\";\nimport { Card, Container, Paper } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Input from \"@mui/material/Input\";\nimport FilledInput from \"@mui/material/FilledInput\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport CharacterChoices from \"../Components/CharacterChoices\";\nimport get_character_choices from \"../Functions/character_choices\";\nimport useCharacter from \"../hooks/useCharacter\";\nimport { Grid } from \"@mui/material\";\n\nimport ComboBox from \"../ComboBox\";\n\nexport default function InputAdornments() {\n  const [values, setValues] = React.useState({\n    // amount: \"\",\n    name: \"\",\n    weight: \"\",\n    level: \"\",\n    race: \"\",\n    _class: \"\",\n    alignment: \"\",\n    strength: \"\",\n    dexterity: \"\",\n    constitution: \"\",\n    intelligence: \"\",\n    wisdom: \"\",\n    charisma: \"\",\n    strBonus: \"\",\n    liftBend: \"\",\n    carryWeight: \"\",\n    dexBonus: \"\",\n    dodge: \"\",\n    speed: \"\",\n    conBonus: \"\",\n    hitDice: \"\",\n    saveThrow: \"\",\n    intBonus: \"\",\n    investBonus: \"\",\n    profBonus: \"\",\n    perceptBonus: \"\",\n    insightBonus: \"\",\n    wisBonus: \"\",\n    charm: \"\",\n    intimidate: \"\",\n    chaBonus: \"\",\n    eyeColor: \"\",\n    hairColor: \"\",\n    height: \"\",\n    age: \"\",\n  });\n\n  const { character } = useCharacter();\n\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n  console.log(character);\n\n  return (\n    <Container sx={{ paddingTop: \"2rem\" }} maxWidth={\"md\"}>\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <Paper elevation={8}>\n            <TextField\n              fullWidth\n              sx={{\n                backgroundColor: \"rgba(255,255,255,.95)\",\n                border: \"double\",\n              }}\n              label=\" - Character Name - \"\n              id=\"outlined-start-adornment\"\n              disabled\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n          </Paper>\n        </Grid>\n        <Grid item xs={2}>\n          <Paper elevation={8}>\n            <TextField\n              fullWidth\n              sx={{\n                backgroundColor: \"rgba(255,255,255,.95)\",\n                border: \"double\",\n              }}\n              label=\"-Gender-\"\n              id=\"outlined-start-adornment\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n          </Paper>\n        </Grid>\n        <Grid item xs={2}>\n          <Paper elevation={8}>\n            <TextField\n              fullWidth\n              sx={{\n                backgroundColor: \"rgba(255,255,255,.95)\",\n                border: \"double\",\n              }}\n              label=\"-Level-\"\n              id=\"outlined-start-adornment\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n          </Paper>\n        </Grid>\n\n        <Grid item xs={2}>\n          <Paper elevation={8}>\n            <TextField\n              fullWidth\n              sx={{\n                backgroundColor: \"rgba(255,255,255,.95)\",\n                border: \"double\",\n              }}\n              label=\"-Exerience Points-\"\n              id=\"outlined-start-adornment\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n          </Paper>\n        </Grid>\n\n        <Grid item xs={3.5}>\n          <Paper elevation={8}>\n            <TextField\n              fullWidth\n              sx={{\n                backgroundColor: \"rgba(255,255,255,.95)\",\n                border: \"double\",\n              }}\n              label=\"-Race- \"\n              id=\"outlined-start-adornment\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n          </Paper>\n        </Grid>\n\n        <Grid item xs={3.5}>\n          <Paper elevation={8}>\n            <TextField\n              fullWidth\n              sx={{\n                backgroundColor: \"rgba(255,255,255,.95)\",\n                border: \"double\",\n              }}\n              label=\"-Class- \"\n              id=\"outlined-start-adornment\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n          </Paper>\n        </Grid>\n        <Grid item xs={3.5}>\n          <Paper elevation={8}>\n            <TextField\n              fullWidth\n              sx={{\n                backgroundColor: \"rgba(255,255,255,.95)\",\n                border: \"double\",\n              }}\n              label=\"-Alignment- \"\n              id=\"outlined-start-adornment\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n          </Paper>\n        </Grid>\n        <Grid item xs={1.5}>\n          <Paper elevation={8}>\n            <TextField\n              fullWidth\n              sx={{\n                backgroundColor: \"rgba(255,255,255,.95)\",\n                border: \"double\",\n              }}\n              label=\"-Age- \"\n              id=\"outlined-start-adornment\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n          </Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper\n            elevation={8}\n            sx={{ backgroundColor: \"rgba(255,255,255,.95)\", border: \"double\" }}\n          >\n            <Grid\n              container\n              spacing={2}\n              sx={{\n                margin: 0,\n                width: \"calc(100% - 16px)\",\n                paddingBottom: \"16px\",\n              }}\n            >\n              <Grid item xs={3}>\n                <TextField\n                  fullWidth\n                  align-label=\"center\"\n                  label=\"Strength\"\n                  id=\"standard-start-adornment\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"center\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  fullWidth\n                  label=\"Str Bonus\"\n                  sx={{ textAlign: \"center\" }}\n                  id=\"standard-start-adornment\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  fullWidth\n                  label=\"Lift/Bend\"\n                  id=\"standard-start-adornment\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  fullWidth\n                  label=\"Carry Weight\"\n                  id=\"standard-start-adornment\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Dexterity\"\n                  id=\"standard-start-adornment\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Dex Bonus\"\n                  id=\"standard-start-adornment\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Dodge\"\n                  id=\"standard-start-adornment\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Speed\"\n                  id=\"standard-start-adornment\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Constitution\"\n                  id=\"standard-start-adornment\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Con Bonus\"\n                  id=\"standard-start-adornment\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Hit Dice\"\n                  id=\"standard-start-adornment\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Saving Throw\"\n                  id=\"standard-start-adornment\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Intelligence\"\n                  id=\"standard-start-adornment\"\n                  fullWidth\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Int Bonus\"\n                  id=\"standard-start-adornment\"\n                  fullWidth\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Investigation\"\n                  id=\"standard-start-adornment\"\n                  fullWidth\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Skill Bonus\"\n                  id=\"standard-start-adornment\"\n                  fullWidth\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Wisdom\"\n                  id=\"standard-start-adornment\"\n                  fullWidth\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Wis Bonus\"\n                  id=\"standard-start-adornment\"\n                  fullWidth\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Perception\"\n                  id=\"standard-start-adornment\"\n                  fullWidth\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Insight\"\n                  id=\"standard-start-adornment\"\n                  fullWidth\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Charisma\"\n                  id=\"standard-start-adornment\"\n                  fullWidth\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Cha Bonus\"\n                  id=\"standard-start-adornment\"\n                  fullWidth\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Charm\"\n                  id=\"standard-start-adornment\"\n                  fullWidth\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Intimidate\"\n                  id=\"standard-start-adornment\"\n                  fullWidth\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                  variant=\"standard\"\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={6}>\n          <Paper\n            elevation={8}\n            sx={{ backgroundColor: \"rgba(255,255,255,.95)\", border: \"double\" }}\n          >\n            <Grid\n              container\n              spacing={2}\n              sx={{\n                margin: 0,\n                width: \"calc(100% - 16px)\",\n                paddingBottom: \"16px\",\n              }}\n            >\n              <Grid item xs={3}>\n                <TextField\n                  fullWidth\n                  label=\"Height\"\n                  id=\"outlined-start-adornment\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  fullWidth\n                  label=\"Weight\"\n                  id=\"outlined-start-adornment\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Eye Color\"\n                  id=\"outlined-start-adornment\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Hair Color\"\n                  id=\"outlined-start-adornment\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Total HP\"\n                  id=\"outlined-start-adornment\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"Initiative +\"\n                  id=\"outlined-start-adornment\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"AC\"\n                  id=\"outlined-start-adornment\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  label=\"THACO\"\n                  id=\"outlined-start-adornment\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\"></InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n\n          <Grid item xs={6} sx={{ paddingTop: \"1rem\" }} maxWidth={\"md\"}>\n            <Paper\n              elevation={8}\n              sx={{\n                backgroundColor: \"rgba(255,255,255,.95)\",\n                border: \"double\",\n              }}\n            >\n              <TextField\n                fullWidth\n                sx={{ marginTop: \"4px\" }}\n                label=\"-SKILLS- \"\n                id=\"standard-start-adornment\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\"></InputAdornment>\n                  ),\n                }}\n                variant=\"standard\"\n              />\n              <TextField\n                fullWidth\n                id=\"standard-start-adornment\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\"></InputAdornment>\n                  ),\n                }}\n                variant=\"standard\"\n              />\n              <TextField\n                fullWidth\n                id=\"standard-start-adornment\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\"></InputAdornment>\n                  ),\n                }}\n                variant=\"standard\"\n              />\n              <TextField\n                fullWidth\n                id=\"standard-start-adornment\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\"></InputAdornment>\n                  ),\n                }}\n                variant=\"standard\"\n              />\n              <TextField\n                fullWidth\n                id=\"standard-start-adornment\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\"></InputAdornment>\n                  ),\n                }}\n                variant=\"standard\"\n              />\n              <TextField\n                fullWidth\n                id=\"standard-start-adornment\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\"></InputAdornment>\n                  ),\n                }}\n                variant=\"standard\"\n              />\n            </Paper>\n          </Grid>\n        </Grid>\n        <Grid item xs={6}>\n          <Card\n            elevation={8}\n            sx={{ backgroundColor: \"rgba(255,255,255,.95)\", border: \"double\" }}\n          >\n            <TextField\n              sx={{ marginTop: \"4px\" }}\n              fullWidth\n              label=\"-Main Hand-\"\n              id=\"standard-start-adornment\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n            <TextField\n              sx={{ marginTop: \"4px\" }}\n              fullWidth\n              label=\"-Off Hand-\"\n              id=\"standard-start-adornment\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n          </Card>\n          <Grid item sx={{ paddingTop: \"1rem\" }}>\n            <Paper\n              elevation={8}\n              sx={{\n                backgroundColor: \"rgba(255,255,255,.95)\",\n                border: \"double\",\n              }}\n            >\n              <TextField\n                fullWidth\n                sx={{ marginTop: \"8px\" }}\n                label=\"-EQUIPMENT- \"\n                id=\"standard-start-adornment\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\"></InputAdornment>\n                  ),\n                }}\n                variant=\"standard\"\n              />\n              <TextField\n                fullWidth\n                id=\"standard-start-adornment\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\"></InputAdornment>\n                  ),\n                }}\n                variant=\"standard\"\n              />\n              <TextField\n                fullWidth\n                id=\"standard-start-adornment\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\"></InputAdornment>\n                  ),\n                }}\n                variant=\"standard\"\n              />\n              <TextField\n                fullWidth\n                id=\"standard-start-adornment\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\"></InputAdornment>\n                  ),\n                }}\n                variant=\"standard\"\n              />\n              <TextField\n                fullWidth\n                id=\"standard-start-adornment\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\"></InputAdornment>\n                  ),\n                }}\n                variant=\"standard\"\n              />\n            </Paper>\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          xs={6}\n          sx={{ paddingTop: \"1rem\", paddingLeftt: \"1rem\" }}\n          maxWidth={\"md\"}\n        >\n          <Paper\n            elevation={8}\n            sx={{ backgroundColor: \"rgba(255,255,255,.95)\", border: \"double\" }}\n          >\n            <TextField\n              fullWidth\n              sx={{ marginTop: \"6px\" }}\n              label=\"-SPELLS- \"\n              id=\"standard-start-adornment\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n            <TextField\n              fullWidth\n              id=\"standard-start-adornment\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n            <TextField\n              fullWidth\n              id=\"standard-start-adornment\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n            <TextField\n              fullWidth\n              id=\"standard-start-adornment\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n            <TextField\n              fullWidth\n              id=\"standard-start-adornment\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n            <TextField\n              fullWidth\n              id=\"standard-start-adornment\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n            <TextField\n              fullWidth\n              id=\"standard-start-adornment\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n            <TextField\n              fullWidth\n              id=\"standard-start-adornment\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n            <TextField\n              fullWidth\n              id=\"standard-start-adornment\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\"></InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","import * as React from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\n\nconst columns = [\n  { id: \"name\", label: \"Name\", minWidth: 170 },\n  { id: \"_class\", label: \"Class\", minWidth: 100 },\n  {\n    id: \"race\",\n    label: \"Race\",\n    minWidth: 170,\n    align: \"right\",\n    format: (value) => value.toLocaleString(\"en-US\"),\n  },\n  {\n    id: \"level\",\n    label: \"Level\",\n    minWidth: 170,\n    align: \"right\",\n    format: (value) => value.toLocaleString(\"en-US\"),\n  },\n];\n\nfunction createData(name, _class, race, level) {\n  return { name, _class, race, level };\n}\n\nconst rows = [\n  createData(\"India\", \"IN\", 1324171354, 3287263),\n  createData(\"China\", \"CN\", 1403500365, 9596961),\n  createData(\"Italy\", \"IT\", 60483973, 301340),\n  createData(\"United States\", \"US\", 327167434, 9833520),\n  createData(\"Canada\", \"CA\", 37602103, 9984670),\n  createData(\"Australia\", \"AU\", 25475400, 7692024),\n  createData(\"Germany\", \"DE\", 83019200, 357578),\n  createData(\"Ireland\", \"IE\", 4857000, 70273),\n  createData(\"Mexico\", \"MX\", 126577691, 1972550),\n  createData(\"Japan\", \"JP\", 126317000, 377973),\n  createData(\"France\", \"FR\", 67022000, 640679),\n  createData(\"United Kingdom\", \"GB\", 67545757, 242495),\n  createData(\"Russia\", \"RU\", 146793744, 17098246),\n  createData(\"Nigeria\", \"NG\", 200962417, 923768),\n  createData(\"Brazil\", \"BR\", 210147125, 8515767),\n];\n\nexport default function StickyHeadTable() {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\n      <TableContainer sx={{ maxHeight: 440 }}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                    {columns.map((column) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === \"number\"\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n","import * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nfunction SignUp(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nexport default function SignIn() {\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    // eslint-disable-next-line no-console\n    console.log({\n      email: data.get(\"email\"),\n      password: data.get(\"password\"),\n    });\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"rgba(255,255,255,.95)\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              sx={{\n                backgroundColor: \"rgba(255,255,255,.95)\",\n                border: \"double\",\n              }}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              sx={{\n                backgroundColor: \"rgba(255,255,255,.95)\",\n                border: \"double\",\n              }}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <FormControlLabel\n              sx={{\n                backgroundColor: \"rgba(255,255,255,.95)\",\n              }}\n              margin=\"normal\"\n              required\n              fullWidth\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button type=\"submit\" fullWidth variant=\"contained\">\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <SignUp sx={{ mt: 8, mb: 4 }} />\n      </Container>\n    </ThemeProvider>\n  );\n}\n","import * as React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Button from \"@mui/material/Button\";\nimport Paper from \"@mui/material/Paper\";\nimport Save from \"@mui/icons-material/Save\";\n\nfunction not(a, b) {\n  return a.filter((value) => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n  return a.filter((value) => b.indexOf(value) !== -1);\n}\n\nexport default function SpellTransfer() {\n  const [checked, setChecked] = React.useState([]);\n  const [save] = React.useState([]);\n  const [left, setLeft] = React.useState([\n    \"Lighting Bolt\",\n    \"Acid Splash\",\n    \"Chill Touch\",\n    \"Bless\",\n    \"Detect Magic\",\n    \"Cure Wounds\",\n    \"Fog Cloud\",\n    \"Bark Skin\",\n    \"Sleep\",\n  ]);\n  const [right, setRight] = React.useState([\n    \"Darkness\",\n    \"Find Traps\",\n    \"Invisibility\",\n    \"Silence\",\n    \"Fireball\",\n    \"Haste\",\n    \"Fear\",\n    \"Charm Monster\",\n    \"Ice Storm\",\n  ]);\n\n  const leftChecked = intersection(checked, left);\n  const rightChecked = intersection(checked, right);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const handleAllRight = () => {\n    setRight(right.concat(left));\n    setLeft([]);\n  };\n\n  const handleCheckedRight = () => {\n    setRight(right.concat(leftChecked));\n    setLeft(not(left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  const handleCheckedLeft = () => {\n    setLeft(left.concat(rightChecked));\n    setRight(not(right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  const handleAllLeft = () => {\n    setLeft(left.concat(right));\n    setRight([]);\n  };\n\n  const customList = (items) => (\n    <Paper\n      elevation={8}\n      sx={{\n        width: 300,\n        height: 600,\n        overflow: \"auto\",\n        backgroundColor: \"rgba(255,255,255,.95)\",\n      }}\n    >\n      <List dense component=\"div\" role=\"list\">\n        {items.map((value) => {\n          const labelId = `transfer-list-item-${value}-label`;\n\n          return (\n            <ListItem\n              key={value}\n              role=\"listitem\"\n              button\n              onClick={handleToggle(value)}\n            >\n              <ListItemIcon>\n                <Checkbox\n                  checked={checked.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{\n                    \"aria-labelledby\": labelId,\n                  }}\n                />\n              </ListItemIcon>\n              <ListItemText id={labelId} primary={` ${value}`} />\n            </ListItem>\n          );\n        })}\n        <ListItem />\n      </List>\n    </Paper>\n  );\n\n  return (\n    <Grid\n      container\n      spacing={2}\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      marginTop=\"15px\"\n    >\n      <Grid item>{customList(left)}</Grid>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"center\">\n          <Button\n            sx={{ my: 0.5, backgroundColor: \"rgba(255,255,255,.95)\" }}\n            variant=\"outlined\"\n            size=\"small\"\n            onClick={handleAllRight}\n            disabled={left.length === 0}\n            aria-label=\"move all right\"\n          >\n            ≫\n          </Button>\n          <Button\n            sx={{ my: 0.5, backgroundColor: \"rgba(255,255,255,.95)\" }}\n            variant=\"outlined\"\n            size=\"small\"\n            onClick={handleCheckedRight}\n            disabled={leftChecked.length === 0}\n            aria-label=\"move selected right\"\n          >\n            &gt;\n          </Button>\n          <Button\n            sx={{ my: 0.5, backgroundColor: \"rgba(255,255,255,.95)\" }}\n            variant=\"outlined\"\n            size=\"small\"\n            onClick={handleCheckedLeft}\n            disabled={rightChecked.length === 0}\n            aria-label=\"move selected left\"\n          >\n            &lt;\n          </Button>\n          <Button\n            sx={{ my: 0.5, backgroundColor: \"rgba(255,255,255,.95)\" }}\n            variant=\"outlined\"\n            size=\"small\"\n            onClick={handleAllLeft}\n            disabled={right.length === 0}\n            aria-label=\"move all left\"\n          >\n            ≪\n          </Button>\n          <Button\n            sx={{ my: 0.5, backgroundColor: \"rgba(255,255,255,.95)\" }}\n            variant=\"outlined\"\n            size=\"small\"\n            onClick={save}\n            //disabled={right.length === 0}\n            aria-label=\"Save\"\n          >\n            Save\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid item>{customList(right)}</Grid>\n    </Grid>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/dragon4.475293aa.png\";","export default __webpack_public_path__ + \"static/media/RedDragon.42ada7c7.png\";","import React from \"react\";\nimport { ReactDOM } from \"react-dom\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport {\n  Table,\n  TableContainer,\n  TableHead,\n  TableBody,\n  TableRow,\n  TextField,\n  Button,\n  Dialog,\n  DialogContentText,\n  DialogContent,\n  DialogTitle,\n  DialogActions,\n  Grid,\n  TableCell,\n  Container,\n  Typography,\n} from \"@mui/material\";\nimport ButtonAppBar from \"./ButtonAppBar\";\nimport NavDrawer from \"./NavDrawer\";\nimport { Render } from \"@testing-library/react\";\nimport { Block, Navigation } from \"@mui/icons-material\";\nimport SkillTransfer from \"./CharacterPage/SkillTransfer\";\nimport NewChar from \"./CharacterPage/NewChar\";\nimport HomePage from \"./CharacterPage/HomePage\";\nimport BlankCharacter from \"./CharacterPage/BlankCharacter\";\nimport SavedCharacters from \"./CharacterPage/SavedCharacters\";\nimport SignIn from \"./CharacterPage/SignIn\";\nimport \"./App.css\";\nimport get_character_choices from \"./Functions/character_choices\";\nimport GenChar from \"./CharacterPage/GenChar\";\nimport CharacterChoices from \"./Components/CharacterChoices\";\nimport { Box } from \"@mui/system\";\nimport SpellTransfer from \"./CharacterPage/SpellTransfer\";\nimport dragon4 from \"./dragon4.png\";\nimport RedDragon from \"./RedDragon.png\";\nimport Image from \"material-ui-image\";\nimport { Select } from \"@mui/material\";\n\nfunction App() {\n  const [show_drawer, set_show_drawer] = useState(false);\n\n  // console.log(character_data);\n  return (\n    <Router>\n      <div>\n        <Grid container>\n          <Grid item xs={12}>\n            <ButtonAppBar open_drawer={() => set_show_drawer(true)} />\n          </Grid>\n          <Grid item xs={12}>\n            <Box\n              sx={{\n                display: \"block\",\n                position: \"fixed\",\n                width: \"100%\",\n                zIndex: -5,\n              }}\n            >\n              <img\n                src={dragon4}\n                style={{ margin: \"0 auto\", display: \"block\" }}\n              />\n            </Box>\n            {/* <Box\n              sx={{\n                backgroundImage: `url(${skull})`,\n                backgroundRepeat: \"no-repeat\",\n                backgroundPosition: \"center\",\n                minHeight: \"663px\",\n              }}\n            > */}\n            <Routes>\n              <Route path=\"/new_character\" element={<NewChar />} />\n              {/* <Route path=\"/new_character_blank\" element={<BlankCharacter />} /> */}\n              <Route path=\"/\" element={<HomePage />} />\n              <Route path=\"/GenChar\" element={<CharacterChoices />} />\n              <Route path=\"/blank_character\" element={<BlankCharacter />} />\n              <Route path=\"/SavedCharacters\" element={<SavedCharacters />} />\n              <Route path=\"/current_character\" element={<new_character />} />\n              <Route path=\"/SpellTransfer\" element={<SpellTransfer />} />\n              <Route path=\"/SkillTransfer\" element={<SkillTransfer />} />\n              <Route path=\"/SignIn\" element={<SignIn />} />\n              {/* <Route path=\"/contact\" element={<Contact />} /> */}\n            </Routes>\n            {/* </Box> */}\n          </Grid>\n        </Grid>\n        <NavDrawer open={show_drawer} onClose={() => set_show_drawer(false)} />\n      </div>\n    </Router>\n  );\n}\n\n//store to db and send to new page\nexport default App;\n","import React from \"react\";\nimport App from \"./App\";\nimport { ThemeProvider, StyledEngineProvider } from \"@mui/material/styles\";\nimport { createTheme } from \"@mui/material/styles\";\nimport {\n  RecoilRoot,\n  atom,\n  selector,\n  useRecoilState,\n  useRecoilValue,\n} from \"recoil\";\n\nconst ThemeWrapper = (props) => {\n  const theme = createTheme({\n    palette: {\n      primary: { main: \"#9b111e\" },\n      secondary: {\n        main: \"#808080\",\n      },\n    },\n  });\n\n  return (\n    <RecoilRoot>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  );\n};\n\nexport default ThemeWrapper;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport ThemeWrapper from \"./ThemeWrapper\";\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeWrapper />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}